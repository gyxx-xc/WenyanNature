import json
import os
import re
import shutil
import toml

java_template = """// This file is generated by snippet_process.py, do not edit it manually.

package indi.wenyan.content.gui;

import java.util.List;

public enum Snippets {;
    public record Context(String value) { }
    /snippet_set/
    /snippet_context/
}
"""

snippet_set_template = """
    public static final SnippetSet /snippet_set_title_upper/ = new SnippetSet("/snippet_set_title/",
        /snippet/
    );
"""
snippet_template = '        SnippetSet.snippet("/name/", "/content/"),\n'

snippet_context_template = """
    /context_define/

    public static final List<SnippetSet> DEFAULT_CONTEXT = /default_context/;

    public static int contextColor(Context context) {
        return switch (context.value()) {
            /context_color/
            default -> throw new IllegalStateException("Unexpected value: " + context.value());
        };
    }

    public static List<SnippetSet> getSnippets(Context context) {
        return switch (context.value()) {
            /context_contain/
            default -> throw new IllegalStateException("Unexpected value: " + context.value());
        };
    }
"""

context_color_template = '            case "/context/" -> /color/;\n'
context_contain_template = '            case "/context/" -> /context/_CONTEXT;\n'
context_define_template = '    public static final List<SnippetSet> /context/_CONTEXT = List.of(/contain/);\n'

data = {}
with open("snippet.json", "r", encoding="utf-8") as f:
    data = json.load(f)
# with open("snippet.toml", "r", encoding="utf-8") as f:
#     data = toml.load(f)
snippet_sets = data["snippet_sets"]
snippet_code = ""
for snippet_set in snippet_sets:
    title = snippet_set["title"]
    snippets = snippet_set["snippets"]
    snippet_set_title_upper = title.upper().replace(" ", "_")
    snippet_set_title = title.replace(" ", "_").lower()
    snippet_str = ""
    for snippet in snippets:
        name = snippet["name"]
        content = snippet["content"].replace("\n", "\\n")
        snippet_str += snippet_template.replace("/name/", name).replace("/content/", content)
    snippet_set_code = snippet_set_template\
        .replace("/snippet_set_title_upper/", snippet_set_title_upper) \
        .replace("/snippet_set_title/", snippet_set_title) \
        .replace("/snippet/", snippet_str[8:-2]) # remove last comma
    snippet_code += snippet_set_code
# context
context = data["snippet_context"]
default_context = data["default_context"]
context_color_code = ""
context_contain_code = ""
context_define_code = ""
for ctx in context:
    ctx_name = ctx["context"]
    ctx_color = ctx["color"]
    ctx_contain = ctx["contain"]
    context_color_code += context_color_template.replace("/context/", ctx_name).replace("/color/", ctx_color)
    context_contain_code += context_contain_template.replace("/context/", ctx_name)
    context_define_code += context_define_template.replace("/context/", ctx_name).replace(
        "/contain/", ", ".join([s.upper() for s in ctx_contain]))
snippet_context_code = snippet_context_template \
    .replace("/default_context/", default_context) \
    .replace("/context_define/", context_define_code[4:]) \
    .replace("/context_color/", context_color_code[12:-1]) \
    .replace("/context_contain/", context_contain_code[12:-1])

final_code = java_template \
    .replace("/snippet_set/", snippet_code) \
    .replace("/snippet_context/", snippet_context_code[:-1])
with open("../Snippets.java", "w", encoding="utf-8") as f_out:
    f_out.write(final_code)
